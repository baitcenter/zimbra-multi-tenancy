<?php
/**
 * Install the module with a new database table
 * @file
 */

/**
 * Implements hook_install().
 */ 
function zimbra_multi_tenancy_install()
{
    module_load_include('inc', 'zimbra_multi_tenancy', 'zimbra_multi_tenancy');

    // add nodetype with zimbra
    _zimbra_add_nodetype_server();
    _zimbra_add_nodetype_tenant();
    _zimbra_add_nodetype_domain();
    _zimbra_add_nodetype_group();
    _zimbra_add_nodetype_alias();
    _zimbra_add_nodetype_mailbox();
  
    zimbra_add_role();
}

/**
 * Implements hook_uninstall().
 */ 
function zimbra_multi_tenancy_uninstall()
{
    variable_del('zimbra_zimbra_role_id');
    variable_del('zimbra_tenant_role_id');
    variable_del('zimbra_tenant_group_role_id');
    variable_del('zimbra_domain_role_id');
    variable_del('zimbra_group_role_id');
}

/**
 * Create Server node type.
 */
function _zimbra_add_nodetype_server()
{
    // Create a newsletter type if needed.
    $type = node_type_get_type('server');
    if(!$type)
    {
        $type = node_type_set_defaults(array(
            'type' => 'server',
            'name' => t('Server'),
            'title_label' => t('Server Name'),
            'base' => 'node_content',
            'description' => t('Content type for Server'),
            'locked' => 0,
            'custom' => 1,
            'modified' => 1,
        ));
        node_type_save($type);
    }
    //Add any field of server content type
    zimbra_add_text_field($type, 'field_server_service_location', 'Service location', 1);  
    zimbra_add_list_text_field($type, 'field_server_client_type', 'Client type', 2);
    zimbra_add_text_field($type, 'field_server_admin_user', 'Server admin user', 3);  
    zimbra_add_password_field($type, 'field_server_admin_password', 'Server admin password', 4);
}

/**
 * Create Tenant node type.
 */
function _zimbra_add_nodetype_tenant()
{
    // Create a newsletter type if needed.
    $type = node_type_get_type('tenant');
    if(!$type)
    {
        $type = node_type_set_defaults(array(
            'type' => 'tenant',
            'name' => t('Tenant'),
            'title_label' => t('Tenant Full Name'),
            'base' => 'node_content',
            'description' => t('Content type for Tenant'),
            'locked' => 0,
            'custom' => 1,
            'modified' => 1,
        ));
        node_type_save($type);
    }
    //Add any field of tenant content type
    zimbra_add_text_field($type, 'field_tenant_user_name', 'Tenant user name', 1);
    zimbra_add_text_field($type, 'field_tenant_user_mail', 'Tenant user e-mail', 2);
    zimbra_add_password_field($type, 'field_tenant_user_password', 'Tenant user password', 3);
    zimbra_add_list_text_field($type, 'field_tenant_base', 'Tenant base', 4);
    zimbra_add_node_reference_field($type, 'field_tenant_server', 'Server', 5, 'server');
    zimbra_add_integer_field($type, 'field_tenant_mailbox_max_size', 'Mailbox max size', 6, 'MB');
    zimbra_add_integer_field($type, 'field_tenant_number_of_mailboxes', 'Number Of Mailboxes', 7, 'Mailbox(es)');
    zimbra_add_user_reference_field($type, 'field_tenant_user', 'Tenant user', 8);
}

/**
 * Create Domain node type.
 */
function _zimbra_add_nodetype_domain()
{
    // Create a newsletter type if needed.
    $type = node_type_get_type('domain');
    if (!$type) {
        $type = node_type_set_defaults(array(
            'type' => 'domain',
            'name' => t('Domain'),
            'title_label' => t('Domain name'),
            'base' => 'node_content',
            'description' => t('Content type for Domain'),
            'locked' => 0,
            'custom' => 1,
            'modified' => 1,
        ));
        node_type_save($type);
    }
    //Add any field of tenant content type  
    zimbra_add_text_field($type, 'field_domain_user_mail', 'Domain user e-mail', 1);  
    zimbra_add_password_field($type, 'field_domain_user_password', 'Domain user password', 2);
    zimbra_add_node_reference_field($type, 'field_domain_tenant', 'Tenant', 3, 'tenant');
    zimbra_add_node_reference_field($type, 'field_domain_server', 'Server', 4, 'server');
    zimbra_add_integer_field($type, 'field_domain_mailbox_max_size', 'Mailbox max size', 5, 'MB');
    zimbra_add_integer_field($type, 'field_domain_number_of_mailboxes', 'Number Of Mailboxes',6, 'Mailbox(es)');
    zimbra_add_user_reference_field($type, 'field_domain_user', 'Domain user', 7);
    zimbra_add_hidden_text_field($type, 'field_domain_zimbra_id', 'Zimbra domain ID', 8);  
}

/**
 * Create Group node type.
 */
function _zimbra_add_nodetype_group()
{
    // Create a newsletter type if needed.
    $type = node_type_get_type('group');
    if (!$type)
    {
        $type = node_type_set_defaults(array(
            'type' => 'group',
            'name' => t('Group'),
            'title_label' => t('Group name'),
            'base' => 'node_content',
            'description' => t('Content type for Group'),
            'locked' => 0,
            'custom' => 1,
            'modified' => 1,
        ));
        node_type_save($type);
    }
    //Add any field of tenant content type
    zimbra_add_text_field($type, 'field_group_fullname', 'Group fullname', 1);
    zimbra_add_password_field($type, 'field_group_user_password', 'Group user password', 2);
    zimbra_add_node_reference_field($type, 'field_node_domain', 'Domain name', 3, 'domain');
    zimbra_add_text_long_field($type, 'field_group_members', 'Members', 4);
    zimbra_add_user_reference_field($type, 'field_group_user', 'Group user', 5);
    zimbra_add_hidden_text_field($type, 'field_group_zimbra_id', 'Zimbra group ID', 6);  
}

/**
 * Create Alias node type.
 */
function _zimbra_add_nodetype_alias() {
    // Create a newsletter type if needed.
    $type = node_type_get_type('alias');
    if (!$type)
    {
        $type = node_type_set_defaults(array(
            'type' => 'alias',
            'name' => t('Alias'),
            'title_label' => t('Alias name'),
            'base' => 'node_content',
            'description' => t('Content type for Alias'),
            'locked' => 0,
            'custom' => 1,
            'modified' => 1,
        ));
        node_type_save($type);
    }
    //Add any field of tenant content type
    zimbra_add_node_reference_field($type, 'field_node_domain', 'Domain', 1, 'domain');
    zimbra_add_node_reference_field($type, 'field_alias_mailbox', 'Mapping mailbox', 2, 'mailbox');
    zimbra_add_node_reference_field($type, 'field_node_group', 'Group', 3, 'group');
}

/**
 * Create Mailbox node type.
 */
function _zimbra_add_nodetype_mailbox()
{
    // Create a newsletter type if needed.
    $type = node_type_get_type('mailbox');
    if (!$type)
    {
        $type = node_type_set_defaults(array(
            'type' => 'mailbox',
            'name' => t('Mailbox'),
            'title_label' => t('Mailbox name'),
            'base' => 'node_content',
            'description' => t('Content type for Alias'),
            'locked' => 0,
            'custom' => 1,
            'modified' => 1,
        ));
        node_type_save($type);
    }
    //Add any field of tenant content type
    zimbra_add_text_field($type, 'field_mailbox_fullname', 'Mailbox fullname', 1);
    zimbra_add_password_field($type, 'field_mailbox_password', 'Mailbox password', 2);
    zimbra_add_node_reference_field($type, 'field_node_domain', 'Domain', 3, 'domain');
    zimbra_add_node_reference_field($type, 'field_node_group', 'Group', 4, 'group');
    zimbra_add_integer_field($type, 'field_mailbox_size', 'Mailbox size', 5, 'MB');
    zimbra_add_hidden_text_field($type, 'field_mailbox_zimbra_id', 'Zimbra mailbox ID', 6);  
}

function zimbra_add_role(){
    $zimbra_role = 'Zimbra';
    $tenant_role = 'Tenant Domain Base';
    $tenant_group_role = 'Tenant Group Base';
    $domain_role = 'Domain';
    $group_role = 'Group';

    $new_roles = array(
        $zimbra_role,
        $tenant_role,
        $tenant_group_role,
        $domain_role,
        $group_role,
    );
    $roles = user_roles();
    foreach ($new_roles as $role)
    {
        if(!in_array($role, $roles))
        {
            $addRole = new stdClass();
            $addRole->name = $role;
            user_role_save($addRole);
        }
    }
    
    $roles = user_roles();
    
    $zimbra_rid = 0;
    $tenant_rid = 0;
    $tenant_group_rid = 0;
    $domain_rid = 0;
    $group_rid = 0;
    foreach($roles as $key => $role)
    {
        if($role == $zimbra_role) $zimbra_rid = $key;
        if($role == $tenant_role) $tenant_rid = $key;
        if($role == $tenant_group_role) $tenant_group_rid = $key;
        if($role == $domain_role) $domain_rid = $key;
        if($role == $group_role) $group_rid = $key;
    }

    $zimbra_perm = array(
        //'create server content' => 1, 
        'create tenant content' => 1,   
        'create domain content' => 1,   
        'create group content' => 1,    
        'create alias content' => 1,    
        'create mailbox content' => 1,  
        
        //'edit own server content' => 1,   
        'edit own tenant content' => 1, 
        'edit own domain content' => 1, 
        'edit own group content' => 1,  
        'edit own alias content' => 1,  
        'edit own mailbox content' => 1,    
        
        //'edit any server content' => 1,   
        'edit any tenant content' => 1, 
        'edit any domain content' => 1, 
        'edit any group content' => 1,  
        'edit any alias content' => 1,  
        'edit any mailbox content' => 1,    
        
        //'delete own server content' => 1,
        'delete own tenant content' => 1,
        'delete own domain content' => 1,   
        'delete own group content' => 1,    
        'delete own alias content' => 1,    
        'delete own mailbox content' => 1,  
        
        //'delete any server content' => 1,
        'delete any tenant content' => 1,
        'delete any domain content' => 1,   
        'delete any group content' => 1,    
        'delete any alias content' => 1,    
        'delete any mailbox content' => 1,  

        'administer zimbra' => 1,
    );  
    
    $tenant_perm = array(
        'create domain content' => 1,   
        'create group content' => 1,    
        'create alias content' => 1,    
        'create mailbox content' => 1,  
        
        'edit own domain content' => 1, 
        'edit own group content' => 1,  
        'edit own alias content' => 1,  
        'edit own mailbox content' => 1,
            
        'edit any domain content' => 1, 
        'edit any group content' => 1,  
        'edit any alias content' => 1,  
        'edit any mailbox content' => 1,    

        'delete own domain content' => 1,   
        'delete own group content' => 1,    
        'delete own alias content' => 1,    
        'delete own mailbox content' => 1,  
    );  
    
    $domain_perm = array(   
        'create group content' => 1,    
        'create alias content' => 1,    
        'create mailbox content' => 1,  
        
        'edit own group content' => 1,  
        'edit own alias content' => 1,  
        'edit own mailbox content' => 1,    
        
        'delete own group content' => 1,    
        'delete own alias content' => 1,    
        'delete own mailbox content' => 1,  
    );  

    
    $group_perm =array( 
        'create alias content' => 1,    
        'create mailbox content' => 1,  
        
        'edit own alias content' => 1,  
        'edit own mailbox content' => 1,    
        
        'delete own alias content' => 1,    
        'delete own mailbox content' => 1,  
    );  

    user_role_change_permissions($zimbra_rid, $zimbra_perm);
    user_role_change_permissions($tenant_rid, $tenant_perm);
    user_role_change_permissions($tenant_group_rid, $domain_perm);
    user_role_change_permissions($domain_rid, $domain_perm);
    user_role_change_permissions($group_rid, $group_perm);

    variable_set('zimbra_zimbra_role_id', $zimbra_rid);
    variable_set('zimbra_tenant_role_id', $tenant_rid);
    variable_set('zimbra_tenant_group_role_id', $tenant_group_rid);
    variable_set('zimbra_domain_role_id', $domain_rid);
    variable_set('zimbra_group_role_id', $group_rid);
    
    drupal_set_message(t('Please <a href="' .url('admin/people/create/' .$zimbra_rid) .'">create user</a> for Zimbra management.'), 'warning');
}

