<?php

/**
 * Tests the zmt cos.
 */
class ZmtCOSTestCase extends DrupalWebTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Zmt COS Test Case',
      'description' => 'Test cases for zmt cos functionality.',
      'group' => 'Zmt Modules',
    );
  }

  /**
   * Enable dependency modules.
   */
  public function setUp() {
    parent::setUp(array(
      'entity',
      'zmt_core',
      'zmt_server',
      'zmt_cos',
    ));
  }

  /**
   * Test the zmt cos CRUD functions.
   */
  function testZmtCOSCrud() {
    $name = DrupalTestCase::randomName();
    $server_id = mt_rand();
    $description = DrupalTestCase::randomName();
    $mail_quota = mt_rand();
    $max_account = mt_rand();
    $zimbra_id = DrupalTestCase::randomName();

    $cos = zmt_cos_new($name);
    $this->assertTrue(isset($cos->name), t('New cos name exists.'));
    $this->assertTrue(isset($cos->server_id), t('New cos server id exists.'));
    $this->assertTrue(isset($cos->description), t('New cos description exists.'));
    $this->assertTrue(isset($cos->mail_quota), t('New cos mail quota exists.'));
    $this->assertTrue(isset($cos->max_account), t('New cos max account exists.'));
    $this->assertTrue(isset($cos->zimbra_id), t('New cos zimbra id exists.'));

    $cos->server_id = $server_id;
    $cos->description = $description;
    $cos->mail_quota = $mail_quota;
    $cos->max_account = $max_account;
    $cos->zimbra_id = $zimbra_id;
    zmt_cos_save($cos);

    $cos_load = zmt_cos_load($cos->id);
    $this->assertEqual($cos_load->name, $cos->name, t('Loaded cos name has same value.'));
    $this->assertEqual($cos_load->description, $cos->description, t('Loaded cos description has same value.'));
    $this->assertEqual($cos_load->mail_quota, $cos->mail_quota, t('Loaded cos mail quota has same value.'));
    $this->assertEqual($cos_load->max_account, $cos->max_account, t('Loaded cos max account has same value.'));
    $this->assertEqual($cos_load->zimbra_id, $cos->zimbra_id, t('Loaded cos zimbra id has same value.'));

    zmt_cos_delete($cos->id);
    $cos_load = zmt_cos_load($cos->id, TRUE);
    $this->assertTrue(empty($cos_load), t('COS deleted.'));
  }
}
