<?php

/**
 * Implements hook_install().
 */ 
function zmt_server_install() {
  $zimbra_role = config_get('zmt.settings', 'zmt_zimbra_role');
  if (!empty($zimbra_role)) {
    $zmt_perms = array(
      'administer any zmt_server' => 1,
    );
    user_role_change_permissions($zimbra_role, $zmt_perms);
  }
}

/**
 * Implements hook_schema().
 */
function zmt_server_schema() {
  $schema = array();
  $cache_schema = backdrop_get_schema_unprocessed('system', 'cache');

  $schema['cache_entity_zmt_server'] = $cache_schema;
  $schema['cache_entity_zmt_server']['description'] = 'Cache table used to store zmt_server entity records.';

  return $schema + array(
    'zmt_server' => array(
      'description' => 'The base table for zimbra server.',
      'fields' => array(
        'id' => array(
          'description' => 'The primary identifier for a server, used internally only.',
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'name' => array(
          'description' => 'The name of this server, always treated as non-markup plain text.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
        'service_location' => array(
          'description' => 'The service location of the server.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
        'admin_user' => array(
          'description' => 'The admin user of the server.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
        'admin_password' => array(
          'description' => 'The admin password of the server.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
        'exclude_mailbox' => array(
          'description' => 'The exclude mailbox of the server.',
          'type' => 'text',
        ),
        'delete_domain' => array(
          'description' => 'Allow delete domain on zimbra server.',
          'type' => 'int',
          'size' => 'tiny',
          'not null' => TRUE,
          'default' => 0,
        ),
        'delete_dl' => array(
          'description' => 'Allow delete dl on zimbra server.',
          'type' => 'int',
          'size' => 'tiny',
          'not null' => TRUE,
          'default' => 0,
        ),
        'delete_account' => array(
          'description' => 'Allow delete account on zimbra server.',
          'type' => 'int',
          'size' => 'tiny',
          'not null' => TRUE,
          'default' => 0,
        ),
        'delete_alias' => array(
          'description' => 'Allow delete alias on zimbra server.',
          'type' => 'int',
          'size' => 'tiny',
          'not null' => TRUE,
          'default' => 0,
        ),
        'auth_token' => array(
          'description' => 'The auth token of the server.',
          'type' => 'text',
        ),
        'uid' => array(
          'description' => 'The {users}.uid that created the server.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
        'created' => array(
          'description' => 'The Unix timestamp when the server was created.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
        'changed' => array(
          'description' => 'The Unix timestamp when the server was most recently saved.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
      ),
      'primary key' => array('id'),
      'indexes' => array(
        'zmt_server_creator_uid' => array('uid'),
        'zmt_server_created' => array('created'),
        'zmt_server_changed' => array('changed'),
      ),
      'foreign keys' => array(
        'zmt_server_creator' => array(
          'table' => 'users',
          'columns' => array('uid' => 'uid'),
        ),
      ),
    ),
  );
}
