<?php

/**
 * Implements hook_install().
 */ 
function zmt_group_install() {
  $config = config('zmt.settings');
  $zimbra_role = $config->get('zmt_zimbra_role');
  $tenant_role = $config->get('zmt_tenant_role');
  $domain_role = $config->get('zmt_domain_role');

  $zmt_perm = array(
    'administer any zmt_group' => 1,
  );
  if (!empty($zimbra_role)) {
    user_role_change_permissions($zimbra_role, $zmt_perm);
  }
  if (!empty($tenant_role)) {
    user_role_change_permissions($tenant_role, $zmt_perm);
  }
  if (!empty($domain_role)) {
    user_role_change_permissions($domain_role, $zmt_perm);
  }
}

/**
 * Implements hook_schema().
 */
function zmt_group_schema() {
  $schema = _zmt_add_zmt_group_schema()
          + _zmt_add_zmt_group_member_schema();

  return $schema;
}

/**
 * Define zimbra distribution list schema.
 */
function _zmt_add_zmt_group_schema() {
  return array(
    'zmt_group' => array(
      'description' => 'The base table for zimbra group (distribution list).',
      'fields' => array(
        'id' => array(
          'description' => 'The primary identifier for a group, used internally only.',
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'domain_id' => array(
          'description' => 'The {zmt_domain}.id of the group.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
        'name' => array(
          'description' => 'The name of the group, always treated as non-markup plain text.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
        'full_name' => array(
          'description' => 'The full name of the group.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
        'zimbra_id' => array(
          'description' => 'The zimbra identify of the group.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
        'group_uid' => array(
          'description' => 'The {users}.uid representation of the group.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
        'uid' => array(
          'description' => 'The {users}.uid that created the group.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
        'created' => array(
          'description' => 'The Unix timestamp when the group was created.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
        'changed' => array(
          'description' => 'The Unix timestamp when the group was most recently saved.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
      ),
      'primary key' => array('id'),
      'unique keys' => array(
        'zmt_group_name' => array('domain_id', 'name'),
      ),
      'indexes' => array(
        'zmt_group_domain_id' => array('domain_id'),
        'zmt_group_uid' => array('group_uid'),
        'zmt_group_creator_uid' => array('uid'),
        'zmt_group_created' => array('created'),
        'zmt_group_changed' => array('changed'),
      ),
      'foreign keys' => array(
        'zmt_domain_dl' => array(
          'table' => 'zmt_domain',
          'columns'=> array('domain_id' => 'id'),
        ),
        'zmt_group_creator' => array(
          'table' => 'users',
          'columns' => array('uid' => 'uid'),
        ),
      ),
    ),
  );
}

/**
 * Define zimbra distribution list member schema.
 */
function _zmt_add_zmt_group_member_schema() {
  return array(
    'zmt_group_member' => array(
      'description' => 'The base table for zimbra group (distribution list) members.',
      'fields' => array(
        'id' => array(
          'description' => 'The primary identifier for a group member, used internally only.',
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'name' => array(
          'description' => 'The name of the group member.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
        'group_id' => array(
          'description' => 'The {zmt_group}.id of the group member.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
        'member_id' => array(
          'description' => 'The member id of the group member.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
        'type' => array(
          'description' => 'The member type of the group member.',
          'type' => 'int',
          'size' => 'tiny',
          'not null' => TRUE,
          'default' => 0,
        ),
        'uid' => array(
          'description' => 'The {users}.uid that created the group member.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
        'created' => array(
          'description' => 'The Unix timestamp when the group member was created.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
      ),
      'primary key' => array('id'),
      'unique keys' => array(
        'zmt_group_member_name' => array('group_id', 'name'),
        'zmt_group_member_unique' => array('group_id', 'type', 'member_id'),
      ),
      'indexes' => array(
        'zmt_group_member_group_id' => array('group_id'),
        'zmt_group_member_type' => array('type'),
        'zmt_group_member_created' => array('created'),
      ),
      'foreign keys' => array(
        'zmt_group_member_group' => array(
          'table' => 'zmt_group',
          'columns'=> array('group_id' => 'id'),
        ),
        'zmt_group_member_creator' => array(
          'table' => 'users',
          'columns' => array('uid' => 'uid'),
        ),
      ),
    ),
  );
}
